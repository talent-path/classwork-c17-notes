
<!-- lowercase model indicates the type that this page expects -->
@model FakeModel
@{
}

<!--
    Capital-M Model indicates we wish to access the model object
     the IDE will know the type from the earlier declaration
-->
<h1>ID: @Model.Id </h1><br />
<h2>@Model.Name</h2>


<form action="/Demo/FirstView/@Model.Id" method="post">
    <!-- here we're adding the id as a hidden because we want
        the id to post with the form, but NOT let the user edit

        we need to start the hidden field with the current id value
        using Model.Id

        we link it back to the property of the object we're posting
        using the name attribute
        -->
    <input type="hidden" value="@Model.Id" name="id" />

    <!-- we place the starting data in the element with value
        using Model.Name and we link it to the correct property
        on the object we post using name = "name"
        -->
    Name: <input type="text" value="@Model.Name" name="name" /> <br />

    <input type="submit" />
</form>

@using (Html.BeginForm(FormMethod.Post, "FirstView")) {

    @Html.HiddenFor(m => m.Id);

    @Html.LabelFor(m => m.Name);
    @Html.TextBoxFor(m => m.Name);

    <button> Click Me! </button>

 }